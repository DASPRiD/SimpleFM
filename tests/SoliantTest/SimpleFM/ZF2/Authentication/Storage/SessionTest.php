<?php
namespace SoliantTest\SimpleFM\ZF2\Authentication\Storage;

use Soliant\SimpleFM\ZF2\Authentication\Storage\Session;
use Zend\Session\ManagerInterface as SessionManager;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-06-28 at 11:22:49.
 */
class SessionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Session
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        /**
         * Mock manager does not allow us to test returned values, but at least it lets us exercise the two
         * custom methods on our Auth Storage
         */
        $manager = \Mockery::mock(
            '\Zend\Session\ManagerInterface',
            [
                'start' => null,
                'rememberMe' => null,
                'forgetMe' => null,
            ]
        );

        /**
         * @param  mixed $namespace
         * @param  mixed $member
         * @param  SessionManager $manager
         */
        $this->object = new Session('theNamespace', null, $manager);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Soliant\SimpleFM\ZF2\Authentication\Storage\Session::setRememberMe
     */
    public function testSetRememberMe()
    {
        $this->object->setRememberMe(1, 1209600);
        $this->object->setRememberMe(0);
        $this->assertInstanceOf(Session::class, $this->object);
    }

    /**
     * @covers Soliant\SimpleFM\ZF2\Authentication\Storage\Session::forgetMe
     */
    public function testForgetMe()
    {
        $this->object->forgetMe();
        $this->assertInstanceOf(Session::class, $this->object);
    }
}
