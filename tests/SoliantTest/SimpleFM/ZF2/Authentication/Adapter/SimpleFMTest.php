<?php
namespace SoliantTest\SimpleFM\ZF2\Authentication\Adapter;

use Soliant\SimpleFM\Adapter;
use Soliant\SimpleFM\HostConnection;
use Soliant\SimpleFM\Loader\Mock as MockLoader;
use Soliant\SimpleFM\ZF2\Authentication\Adapter\Exception\InvalidArgumentException;
use Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM;
use Zend\Authentication\Result;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-06-28 at 11:20:49.
 */
class SimpleFMTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var SimpleFM
     */
    protected $authAdapter;

    /**
     * @var array
     */
    protected $authAdapterConfig;

    /**
     * @var string
     */
    protected $mockXml;

    /**
     * @var HostConnection
     */
    protected $hostConnection;

    /**
     * @var Adapter
     */
    protected $simpleFmAdapter;

    /**
     * @var Adapter
     */
    protected $simpleFmAdapterHttpError401;

    /**
     * @var Adapter
     */
    protected $simpleFmAdapterPhpError;

    /**
     * @var Adapter
     */
    protected $simpleFmAdapterUnexpectedError;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

        $this->mockXml = file_get_contents(dirname(__FILE__) . '/../../../TestAssets/sample_fmresultset.xml');
        $this->authAdapterConfig['encryptionKey'] = null;
        $this->authAdapterConfig['appUsername'] = 'appUsername';
        $this->authAdapterConfig['appPassword'] = 'appPassword';
        $this->authAdapterConfig['identityLayout'] = 'identityLayout';
        $this->authAdapterConfig['accountNameField'] = 'accountNameField';
        $this->hostConnection = new HostConnection('hostname', 'dbname', 'username', 'password');

        $this->simpleFmAdapter = new Adapter($this->hostConnection);
        $this->simpleFmAdapter->setLoader(new MockLoader($this->mockXml));
        $this->authAdapter = new SimpleFM($this->authAdapterConfig, $this->simpleFmAdapter);


//        $this->simpleFmAdapterPhpError = new Adapter($this->hostConnection);
//        $this->simpleFmAdapterPhpError->setLoader(new MockLoader($this->mockXml));
//        $this->authAdapterPhpError = new SimpleFM($this->authAdapterConfig, $this->simpleFmAdapterPhpError);
//
//        $this->simpleFmAdapterUnexpectedError = new Adapter($this->hostConnection);
//        $this->simpleFmAdapterUnexpectedError->setLoader(new MockLoader($this->mockXml));
//        $this->authAdapterUnexpectedError = new SimpleFM($this->authAdapterConfig, $this->simpleFmAdapterUnexpectedError);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::__construct
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::setUsername
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::setPassword
     */
    public function testConstruct()
    {
        $this->assertInstanceOf(SimpleFM::class, $this->authAdapter);
        $config1 = $this->authAdapterConfig;

        $config1['encryptionKey'] = '123456';
        $invalid1 = new SimpleFM($config1, $this->simpleFmAdapter);
    }

    /**
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::__construct
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::setUsername
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::setPassword
     */
    public function testConstructIdentityLayoutException()
    {
        $this->assertInstanceOf(SimpleFM::class, $this->authAdapter);
        $config1 = $this->authAdapterConfig;

        $this->setExpectedException(InvalidArgumentException::class);
        unset($config1['identityLayout']);
        $invalid1 = new SimpleFM($config1, $this->simpleFmAdapter);
    }

    /**
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::__construct
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::setUsername
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::setPassword
     */
    public function testConstructAccountNameFieldException()
    {
        $this->assertInstanceOf(SimpleFM::class, $this->authAdapter);
        $config1 = $this->authAdapterConfig;

        $this->setExpectedException(InvalidArgumentException::class);
        unset($config1['accountNameField']);
        $invalid1 = new SimpleFM($config1, $this->simpleFmAdapter);
    }

    /**
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::setRememberMe
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::getAccountNameField
     */
    public function testGettersSetters()
    {
        $this->authAdapter->setRememberMe(true);
        $this->assertInstanceOf(SimpleFM::class, $this->authAdapter);
        $this->authAdapter->setRememberMe(false);
        $this->assertInstanceOf(SimpleFM::class, $this->authAdapter);
        $this->assertEquals('accountNameField', $this->authAdapter->getAccountNameField());
    }

    /**
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::authenticate
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::handleAuthenticateResult
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::handleErrorTypeFileMaker
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::handleErrorTypeHttp
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::handleErrorTypePhp
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::handleUnexpectedError
     */
    public function testAuthenticateFileMakerError()
    {
        $this->assertInstanceOf(Result::class, $this->authAdapter->authenticate());

        $simpleFmAdapter = new Adapter($this->hostConnection);
        $loader = new MockLoader($this->mockXml);
        $loader->setTestXml(file_get_contents(dirname(__FILE__) . '/../../../TestAssets/sample_fmresultset_fmerror4.xml'));
        $simpleFmAdapter->setLoader($loader);
        $authAdapterFileMakerError4 = new SimpleFM($this->authAdapterConfig, $simpleFmAdapter);
        $this->assertInstanceOf(Result::class, $authAdapterFileMakerError4->authenticate());

    }

    /**
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::authenticate
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::handleAuthenticateResult
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::handleErrorTypeHttp
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::handleUnexpectedError
     */
    public function testAuthenticateHttpError()
    {
        $simpleFmAdapter = new Adapter($this->hostConnection);
        $loader = new MockLoader($this->mockXml);
        $loader->setMockError(
            'file_get_contents(http://10.0.0.13:80/fmi/xml/fmresultset.xml) ' .
            '[function.file-get-contents]: failed to open stream: HTTP request failed! HTTP/1.1 401 Unauthorized'
        );
        $simpleFmAdapter->setLoader($loader);
        $authAdapterHttpError401 = new SimpleFM($this->authAdapterConfig, $simpleFmAdapter);
        $this->assertInstanceOf(Result::class, $authAdapterHttpError401->authenticate());

        $loader->setMockError(
            'file_get_contents(http://10.0.0.13:80/fmi/xml/fmresultset.xml) ' .
            '[function.file-get-contents]: failed to open stream: HTTP request failed! HTTP/1.1 403 Not Permitted'
        );
        $simpleFmAdapter->setLoader($loader);
        $authAdapterHttpError403 = new SimpleFM($this->authAdapterConfig, $simpleFmAdapter);
        $this->assertInstanceOf(Result::class, $authAdapterHttpError403->authenticate());
    }

    /**
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::authenticate
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::handleAuthenticateResult
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::handleErrorTypePhp
     */
    public function testAuthenticatePhpError()
    {
        $simpleFmAdapter = new Adapter($this->hostConnection);
        $authAdapterPhpError = new SimpleFM($this->authAdapterConfig, $simpleFmAdapter);
        $this->assertInstanceOf(Result::class, $authAdapterPhpError->authenticate());
    }

    /**
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::authenticate
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::handleAuthenticateResult
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::handleUnexpectedError
     */
    public function testAuthenticateUnexpectedError()
    {
        $simpleFmAdapter = new Adapter($this->hostConnection);
        $loader = new MockLoader($this->mockXml);
        $loader->setTestXml(file_get_contents(dirname(__FILE__) . '/../../../TestAssets/invalid.xml'));
        $simpleFmAdapter->setLoader($loader);
        $authAdapterUnexpectedError = new SimpleFM($this->authAdapterConfig, $simpleFmAdapter);
        $this->assertInstanceOf(Result::class, $authAdapterUnexpectedError->authenticate());
    }

    /**
     * @covers Soliant\SimpleFM\ZF2\Authentication\Adapter\SimpleFM::escapeStringForFileMakerSearch
     */
    public function testEscapeStringForFileMakerSearch()
    {
        $this->assertEquals(SimpleFM::escapeStringForFileMakerSearch('abc@xyz.com'), 'abc\@xyz.com');
    }
}
